version: "3.9"

services:
  search-api-db:
    image: postgres
    volumes:
      - db-data:/var/lib/postgresql/data2
    environment:
      - POSTGRES_USER=${DB_USERNAME:-search}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-search}
      - POSTGRES_DB=${DB_NAME:-search}
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - ${DB_PORT:-54332}:5432/tcp
    restart: unless-stopped

  search-api:
    build: .
    ports:
      - "${API_PORT:-8082}:8080"
    environment:
      # Load Docker-specific environment
      - FLASK_ENV=production
      - DATABASE_HOST=search-api-db
      - DATABASE_PORT=5432
      - DATABASE_USERNAME=${DB_USERNAME:-search}
      - DATABASE_PASSWORD=${DB_PASSWORD:-search}
      - DATABASE_NAME=${DB_NAME:-search}
      - ENVIRONMENT=production
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - API_TIMEOUT=300.0
      - VECTOR_SEARCH_API_URL=${VECTOR_API_URL}
      - LLM_PROVIDER=openai
      - LLM_TEMPERATURE=0.3
      - LLM_MAX_TOKENS=1000
      - LLM_MAX_CONTEXT_LENGTH=8192
      - AZURE_OPENAI_API_KEY=${AZURE_OPENAI_API_KEY}
      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT}
      - AZURE_OPENAI_DEPLOYMENT=${AZURE_OPENAI_DEPLOYMENT}
      - AZURE_OPENAI_API_VERSION=2025-01-01-preview
      - CORS_ORIGIN=${ALLOWED_ORIGINS:-*}
    depends_on:
      - search-api-db
      - keycloak
    restart: unless-stopped

  search-api-db-test:
    image: postgres
    volumes:
      - db-data:/var/lib/postgresql/data3
    environment:
      - POSTGRES_USER=${DB_TEST_USERNAME:-search}
      - POSTGRES_PASSWORD=${DB_TEST_PASSWORD:-search}
      - POSTGRES_DB=${DB_TEST_NAME:-search}
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - ${DB_TEST_PORT:-54333}:5432/tcp
    restart: unless-stopped

  keycloak:
    image: quay.io/keycloak/keycloak:12.0.2
    ports:
      - "${KEYCLOAK_PORT:-8081}:8081"
    environment:
      - KEYCLOAK_USER=${KEYCLOAK_USER:-admin}
      - KEYCLOAK_PASSWORD=${KEYCLOAK_PASSWORD:-admin}
    command: -b 0.0.0.0 -Djboss.http.port=8081 -Dkeycloak.migration.action=import -Dkeycloak.migration.provider=dir -Dkeycloak.migration.dir=/tmp/keycloak/test -Dkeycloak.migration.strategy=OVERWRITE_EXISTING
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "--fail",
          "http://localhost:8081/auth/realms/demo || exit 1",
        ]
      interval: 30s
      timeout: 10s
      retries: 10
    volumes:
      - ./setup:/tmp/keycloak/test/

volumes:
  db-data:
    driver: local
  