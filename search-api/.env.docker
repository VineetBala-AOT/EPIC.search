# Docker/Container Environment Configuration
FLASK_ENV=production

# Database (container networking)
DATABASE_HOST=search-api-db
DATABASE_PORT=5432
DATABASE_USERNAME=${DB_USERNAME}
DATABASE_PASSWORD=${DB_PASSWORD}
DATABASE_NAME=${DB_NAME}

# MCP Server Configuration (Docker/Linux)
# Auto-detected, but can be overridden:
# MCP_SERVER_COMMAND=python src/mcp_server/mcp_server.py

# MCP Server Settings
MCP_SERVER_NAME=epic-search-tools
LOG_LEVEL=INFO
API_TIMEOUT=300.0
ENVIRONMENT=production

# Vector Search API (you'll need to update this to your actual vector API)
VECTOR_SEARCH_API_URL=${VECTOR_API_URL}

# LLM Provider Configuration
LLM_PROVIDER=openai
LLM_TEMPERATURE=0.3
LLM_MAX_TOKENS=1000
LLM_MAX_CONTEXT_LENGTH=8192

# Azure OpenAI Configuration
AZURE_OPENAI_API_KEY=${AZURE_OPENAI_API_KEY}
AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT}
AZURE_OPENAI_DEPLOYMENT=${AZURE_OPENAI_DEPLOYMENT}
AZURE_OPENAI_API_VERSION=2025-01-01-preview

# CORS (allow container access)
CORS_ORIGIN=${ALLOWED_ORIGINS}

# JWT Configuration for testing
JWT_OIDC_TEST_ISSUER=${JWT_ISSUER}
JWT_OIDC_TEST_WELL_KNOWN_CONFIG=${JWT_WELL_KNOWN_CONFIG}
JWT_OIDC_TEST_ALGORITHMS=RS256
JWT_OIDC_TEST_AUDIENCE=${JWT_AUDIENCE}
JWT_OIDC_TEST_CLIENT_SECRET=${JWT_CLIENT_SECRET}
JWT_OIDC_TEST_JWKS_CACHE_TIMEOUT=6000
